// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                           
 *                            {0, 0, in, 0, 0, 0, 0, 0} if sel == 010
 *                            {0, 0, 0, in, 0, 0, 0, 0} if sel == 011
 *                            {0, 0, 0, 0, in, 0, 0, 0} if sel == 100
 *                            {0, 0, 0, 0, 0, in, 0, 0} if sel == 101
 *                            {0, 0, 0, 0, 0, 0, in, 0} if sel == 110
 * 
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */


CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not (in=sel[0], out=selXX0);
    Not (in=sel[1], out=selX0X);
    Not (in=sel[2], out=sel0XX);

    And (a=selX0X, b=selXX0, out=selX00);
    And (a=sel0XX, b=selX0X, out=sel00X);
    And (a=sel0XX, b=selXX0, out=sel0X0);

    And (a=sel[1], b=sel[0], out=selX11);
    And (a=sel[2], b=sel[0], out=sel1X1);
    And (a=sel[2], b=sel[1], out=sel11X);

    And (a=sel0XX, b=selX00, out=sel000);
    And (a=sel00X, b=sel[0], out=sel001);
    And (a=sel0X0, b=sel[1], out=sel010);
    And (a=sel0XX, b=selX11, out=sel011);
    And (a=selX00, b=sel[2], out=sel100);
    And (a=selX0X, b=sel1X1, out=sel101);
    And (a=selXX0, b=sel11X, out=sel110);
    And (a=sel1X1, b=sel[1], out=sel111);

    And (a=in, b=sel000, out=a);
    And (a=in, b=sel001, out=b);
    And (a=in, b=sel010, out=c);
    And (a=in, b=sel011, out=d);
    And (a=in, b=sel100, out=e);
    And (a=in, b=sel101, out=f);
    And (a=in, b=sel110, out=g);
    And (a=in, b=sel111, out=h);
}
